name: Build & Deploy EQ Microservices

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Changed Microservices
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.filter.outputs.registry }}
      gateway: ${{ steps.filter.outputs.gateway }}
      eurekaserver: ${{ steps.filter.outputs.eurekaserver }}
      calendar: ${{ steps.filter.outputs.calendar }}
      document: ${{ steps.filter.outputs.document }}
      frontend: ${{ steps.filter.outputs.frontend }}
      any: ${{ steps.filter.outputs.any_changed }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Filter changed services
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            registry: 'registry/**'
            gateway: 'gateway/**'
            eurekaserver: 'eurekaserver/**'
            calendar: 'calendar/**'
            document: 'document/**'
            frontend: 'frontend/**'
            any_changed:
              - 'registry/**'
              - 'gateway/**'
              - 'eurekaserver/**'
              - 'calendar/**'
              - 'document/**'
              - 'frontend/**'

  build-and-push:
    name: Build and Push Docker Images
    needs: detect-changes
    if: needs.detect-changes.outputs.any == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push only changed microservices
        run: |
          chmod +x ./push_eq.sh
          ./push_eq.sh $(echo \
            ${{ needs.detect-changes.outputs.registry == 'true' && 'registry' || '' }} \
            ${{ needs.detect-changes.outputs.gateway == 'true' && 'gateway' || '' }} \
            ${{ needs.detect-changes.outputs.eurekaserver == 'true' && 'eurekaserver' || '' }} \
            ${{ needs.detect-changes.outputs.calendar == 'true' && 'calendar' || '' }} \
            ${{ needs.detect-changes.outputs.document == 'true' && 'document' || '' }} \
            ${{ needs.detect-changes.outputs.frontend == 'true' && 'frontend' || '' }} \
          )
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_PASSWORD }}
          TAG: latest

  deploy:
    name: SSH Deploy on Production Server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}

          script: |
            cd /home/manager/eq
            docker compose pull
            docker compose up -d
